{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hi! I'm Sherman, a Software Engineer focused on Web Technologies. I love typed languages and functional programming, currently working with TypeScript and PureScript. I am a public speaker , open source contributor , tech blogger and I co-organize the Nardoz and ngBaires meetups in Buenos Aires. Contact me if you want me to talk at your event, give a workshop or if you just need some help.","title":"About me"},{"location":"bici/","text":"From June to September I'll be traveling with my girlfriend from Barcelona to Hamburg by \ud83d\udeb4\u200d\u2642\ufe0f. I'll be posting updates on instagram . I would love to speak at a local meetup while I'm there, so if you are an orginizer and you like one of these talks , please contact me . Also, if you are going to BusConf , I'll see you there!","title":"Bike tour 2019"},{"location":"contributions/","text":"These are my open contributions, you can see my work experience and education from Linkedin Blogs Not all compilers are created equally: TypeScript vs PureScript English Guardians of the code English - Spanish Literal types to the test English TypeScript meets Google Sheets English - Spanish Creating typings for curry using TS 3.x English Recorded talks Whose error is it anyway (2018) MeetupJs (Spanish) TypeScript can do that? (2018) NetConfAr (Spanish) Defensive programming in Node with PureScript (2018) BaNode (Spanish) Code is Data and viceversa (2016) NodeConfAr (Spanish) - DevDayAr (Spanish) What is TypeScript (2016) MeetupJs (Spanish) El zen de Angular (2015) MeetupJs (Spanish) OSS @ts-task family typescript-node-starter parmenides angular-screenfull express-shared-routes gh-repo-sync","title":"Contributions"},{"location":"contributions/#blogs","text":"Not all compilers are created equally: TypeScript vs PureScript English Guardians of the code English - Spanish Literal types to the test English TypeScript meets Google Sheets English - Spanish Creating typings for curry using TS 3.x English","title":"Blogs"},{"location":"contributions/#recorded-talks","text":"Whose error is it anyway (2018) MeetupJs (Spanish) TypeScript can do that? (2018) NetConfAr (Spanish) Defensive programming in Node with PureScript (2018) BaNode (Spanish) Code is Data and viceversa (2016) NodeConfAr (Spanish) - DevDayAr (Spanish) What is TypeScript (2016) MeetupJs (Spanish) El zen de Angular (2015) MeetupJs (Spanish)","title":"Recorded talks"},{"location":"contributions/#oss","text":"@ts-task family typescript-node-starter parmenides angular-screenfull express-shared-routes gh-repo-sync","title":"OSS"},{"location":"talks/","text":"Talks These are the abstracts of my current talks, please contact me if you want me to speak at your event. Houston, we have an Exception When we program, we normally focus on the happy path, resolving the task at hand and assuming that nothing can wrong go. Sadly, anything that can fail, will fail. When we sign up the username will be already in use. We will lose connection. When we call our API we'll get a 500 error or timeout, and the user will make a mistake filling the forms. So what constitutes an error? How can we avoid them or at least rest assured that they are being handled? In this talk, we'll see how we can use TypeScript to answer those questions and make our life's easier. whose error is it anyway - MeetupJs (Spanish) Defensive programming in Node with PureScript When we program, our first intuition is to resolve \"the happy path\", do the task at hand assuming that everything works as expected, nothing fails. But sadly, \" all software is broken \" and in general, the bugs are not in the happy path. We need to program defensively! In this talk we'll see a proof of concept of a console tool made both in JavaScript and in PureScript, concentrating in all the different things that can go wrong, trying to catch all errors so that no bug is left behind. BaNode (Spanish) TypeScript can do that? TypeScript is not a new language, is a way to type JavaScript. But given the dynamic nature of JS and the fact that it's a multi-paradigm language some challenges arise. In this talk, we'll see some of the newest TypeScript features that helps cope with this problem. We'll also see how Functional Programming relates to Object Oriented Programming and why learning one will make us better in the other. NetConfAr (Spanish)","title":"Talks"},{"location":"talks/#talks","text":"These are the abstracts of my current talks, please contact me if you want me to speak at your event.","title":"Talks"},{"location":"talks/#houston-we-have-an-exception","text":"When we program, we normally focus on the happy path, resolving the task at hand and assuming that nothing can wrong go. Sadly, anything that can fail, will fail. When we sign up the username will be already in use. We will lose connection. When we call our API we'll get a 500 error or timeout, and the user will make a mistake filling the forms. So what constitutes an error? How can we avoid them or at least rest assured that they are being handled? In this talk, we'll see how we can use TypeScript to answer those questions and make our life's easier. whose error is it anyway - MeetupJs (Spanish)","title":"Houston, we have an Exception"},{"location":"talks/#defensive-programming-in-node-with-purescript","text":"When we program, our first intuition is to resolve \"the happy path\", do the task at hand assuming that everything works as expected, nothing fails. But sadly, \" all software is broken \" and in general, the bugs are not in the happy path. We need to program defensively! In this talk we'll see a proof of concept of a console tool made both in JavaScript and in PureScript, concentrating in all the different things that can go wrong, trying to catch all errors so that no bug is left behind. BaNode (Spanish)","title":"Defensive programming in Node with PureScript"},{"location":"talks/#typescript-can-do-that","text":"TypeScript is not a new language, is a way to type JavaScript. But given the dynamic nature of JS and the fact that it's a multi-paradigm language some challenges arise. In this talk, we'll see some of the newest TypeScript features that helps cope with this problem. We'll also see how Functional Programming relates to Object Oriented Programming and why learning one will make us better in the other. NetConfAr (Spanish)","title":"TypeScript can do that?"}]}